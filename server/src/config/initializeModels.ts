import { sequelize } from './database';
import { Project } from '../models/Project';
import { Device } from '../models/Device';
import { DeviceReference } from '../models/DeviceReference';
import { Kip } from '../models/Kip';
import { Zra } from '../models/Zra';
import { Signal } from '../models/Signal';
import { DeviceSignal } from '../models/DeviceSignal';
import { DeviceTypeSignal } from '../models/DeviceTypeSignal';

export const initializeModels = async () => {
  console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π...');

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
    Project.initialize(sequelize);
    Device.initialize(sequelize);
    DeviceReference.initialize(sequelize);
    Kip.initialize(sequelize);
    Zra.initialize(sequelize);
    Signal.initialize(sequelize);
    DeviceSignal.initialize(sequelize);
    DeviceTypeSignal.initialize(sequelize);

    console.log('‚úÖ –ú–æ–¥–µ–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏
    console.log('üîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–π...');
    
    Project.associate({});
    Device.associate();
    DeviceReference.associate();
    Kip.associate();
    Zra.associate();
    Signal.associate();
    DeviceSignal.associate();

    console.log('‚úÖ –ê—Å—Å–æ—Ü–∏–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');

    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö...');
    await sequelize.sync({ force: false });
    console.log('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π:', error);
    throw error;
  }
}; 